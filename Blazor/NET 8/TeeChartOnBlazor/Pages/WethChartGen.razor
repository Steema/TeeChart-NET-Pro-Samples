@using Steema.TeeChart;
@using System.IO;
@using System.Drawing;
@using TeeChartOnBlazor.Data;  //the project data

@code {

    public string chartName;

    //get chart as image
    public Task<String> GetChart(WeatherForecast[] forecasts, int width, int height)
    {
        Steema.TeeChart.TChart mChart = new TChart();
        Steema.TeeChart.Styles.Bar mBar = new Steema.TeeChart.Styles.Bar();

        mChart.Header.Text = "TeeChart in Blazor example";

        mChart.Series.Add(mBar);

        //mBar.FillSampleValues();
        foreach (WeatherForecast forecast in forecasts)
        {
            int aDate = (int)Math.Truncate(forecast.Date.ToOADate()); //day stamp
            mBar.Add(aDate, forecast.TemperatureC);
        }

        mBar.Origin = 0;

        mChart.Axes.Left.SetMinMax(mBar.YValues.Minimum, mBar.YValues.Maximum);

        mBar.XValues.DateTime = true;
        //mChart.Axes.Bottom.Labels.Angle = 90;
        mChart.Axes.Bottom.Increment = Steema.TeeChart.Utils.GetDateTimeStep(DateTimeSteps.OneDay);
        mChart.Axes.Left.Title.Text = "ºC";

        MemoryStream ms = new MemoryStream();
        mChart.Export.Image.PNG.Width = width;
        mChart.Export.Image.PNG.Height = height;
        mChart.Export.Image.PNG.Save(ms);

        String str = Convert.ToBase64String(ms.ToArray());

        return Task.FromResult("data:image/bmp;base64," + str);
    }

    //get live chart
    public Task<string> GetJSChart(WeatherForecast[] forecasts, int width, int height)
    {
        Steema.TeeChart.TChart mChart = new TChart();
        Steema.TeeChart.Styles.Bar mBar = new Steema.TeeChart.Styles.Bar();

        mChart.Header.Text = "TeeChart in Blazor example";

        mChart.Series.Add(mBar);

        //mBar.FillSampleValues();
        foreach (WeatherForecast forecast in forecasts)
        {
            int aDate = (int)Math.Truncate(forecast.Date.ToOADate()); //day stamp
            mBar.Add(aDate, forecast.TemperatureC);
        }

        mBar.XValues.DateTime = true;
        //mChart.Axes.Bottom.Labels.Angle = 90;
        mChart.Axes.Bottom.Increment = Steema.TeeChart.Utils.GetDateTimeStep(DateTimeSteps.OneDay);
        mChart.Axes.Left.Title.Text = "ºC";

        mChart.Axes.Left.SetMinMax(mBar.YValues.Minimum-10, mBar.YValues.Maximum+10);

        chartName = "dynoTeeChart";
        mChart.Export.Image.JScript.ChartName = chartName;

        MemoryStream ms = new MemoryStream();
        mChart.Export.Image.JScript.Width = width;
        mChart.Export.Image.JScript.Height = height;
        mChart.Export.Image.JScript.DoFullPage = false; //inline, no page <html> header tags
        mChart.Export.Image.JScript.CustomCode = getCustomCode(mChart);
        mChart.Export.Image.JScript.Save(ms);

        ms.Position = 0;

        StreamReader reader = new StreamReader(ms);
        //setup our chart name, here 'dynoChartName'.
        string result = "<script> var "+chartName+"; " + reader.ReadToEnd() + "</script>";

        return Task.FromResult(result);
    }

    string[] getCustomCode(TChart aChart)
    {
        //aChart.Export.Image.JScript.SourceUnits.Add("teechart-animations.js");

        var customCode = new List<string>();

        customCode.Add("   //animation");
        customCode.Add("   animation = new Tee.SeriesAnimation();");
        customCode.Add("   animation.duration = 900;");
        customCode.Add("   animation.kind = \"each\";");
        customCode.Add("   fadeAnimation = new Tee.FadeAnimation();");
        customCode.Add("   fadeAnimation.duration = 500;");
        customCode.Add("   fadeAnimation.fade.series = true;");
        customCode.Add("   fadeAnimation.fade.marks = true;");
        customCode.Add("   animation.mode = \"linear\"; ");
        customCode.Add("   fadeAnimation.mode = \"linear\";");
        customCode.Add("   animation.items.push(fadeAnimation);");
        customCode.Add("   ");
        customCode.Add("   animation.animate("+ aChart.Export.Image.JScript.ChartName + ");");


        //customCode.Add("  setTimeout(manualLoop, 6000); ");

        customCode.Add(aChart.Export.Image.JScript.ChartName + ".axes.bottom.labels.format.font.fill = \"rgba(0,0,0,0.6)\";");
        customCode.Add(aChart.Export.Image.JScript.ChartName + ".axes.bottom.labels.format.font.setSize(\"10px\");");
        customCode.Add(aChart.Export.Image.JScript.ChartName + ".series.items[0].marks.transparent = true;");


        customCode.Add("resizeC(" + chartName + ");");

        return customCode.ToArray();


    }
}
